{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/gallery/gallery.component.ts","./src/app/gallery/gallery.component.html","./src/app/helpers/canvas.ts","./src/app/image-comparer/image-comparer.component.ts","./src/app/image-comparer/image-comparer.component.html","./src/app/libs/selection.js","./src/app/libs/utils.js","./src/app/models/FileWithURL.ts","./src/app/pipes/bytes.pipe.ts","./src/app/pipes/percent-with-sign.pipe.ts","./src/app/pipes/safe.pipe.ts","./src/app/services/image-compression.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,iBAAiB;;AAExC;AACA,mBAAmB,MAAM;AACzB;AACA;AACA;;AAEA;AACA;;AAEA;AACA,YAAY,kDAAG;AACf;AACA;AACA;AACA;AACA,aAAa;;AAEb,YAAY,kDAAG;AACf;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA,SAAS;;AAET;AACA,mBAAmB,MAAM;AACzB,uCAAuC,yCAAE,GAAG,0CAAG;AAC/C;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;;AAET;AACA,mBAAmB,aAAa,GAAG,4DAAa;AAChD,mBAAmB,8BAA8B;AACjD;;AAEA;AACA,+BAA+B,wDAAS;AACxC,+BAA+B,wDAAS;;AAExC;AACA;AACA,gBAAgB,yDAAU;AAC1B;;AAEA;AACA,4BAA4B,wDAAS;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY,iDAAE;;AAEd;AACA,YAAY,iDAAE,2DAA2D,eAAe;AACxF,YAAY,iDAAE;;AAEd;AACA;AACA,SAAS;;AAET;AACA,mBAAmB,QAAQ;AAC3B,wBAAwB,4DAAa;AACrC;;AAEA;AACA;AACA,aAAa;AACb;;AAEA,uBAAuB,KAAK;AAC5B;AACA,2BAA2B,yBAAyB;AACpD;AACA,iBAAiB;AACjB,aAAa;AACb,2DAA2D,QAAQ;AACnE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA,mBAAmB,KAAK,GAAG,4DAAa;AACxC,mBAAmB,sBAAsB;AACzC,mBAAmB,WAAW,QAAQ;;AAEtC;AACA;AACA;AACA;AACA,gBAAgB,kDAAG,2DAA2D,eAAe;AAC7F,gBAAgB,iDAAE,sDAAsD,eAAe;;AAEvF;AACA,gBAAgB,kDAAG;;AAEnB;AACA,gBAAgB,wDAAS;;AAEzB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,iDAAE,uCAAuC,eAAe;;AAE5E;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kDAAG;AACvB;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA,oBAAoB,kDAAG;AACvB;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA,oBAAoB,kDAAG;AACvB;AACA;AACA;AACA;AACA,qBAAqB;;AAErB,oBAAoB,kDAAG;AACvB;AACA;AACA,qBAAqB;AACrB;;AAEA;AACA;AACA;AACA;;AAEA,iCAAiC;AACjC,SAAS;;AAET;AACA,mBAAmB,KAAK,GAAG,4DAAa;AACxC,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,sBAAsB;;AAEjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC;AACjC,SAAS;;AAET;AACA,mBAAmB,kBAAkB;;AAErC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA,mBAAmB,4EAA4E;AAC/F;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA,mBAAmB,oBAAoB;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA,mBAAmB,mBAAmB;;AAEtC;AACA,YAAY,kDAAG;AACf,YAAY,kDAAG;AACf,YAAY,kDAAG;;AAEf;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA,iCAAiC;;AAEjC;AACA,YAAY,kDAAG;;AAEf;AACA;;AAEA;AACA,YAAY,kDAAG;AACf,YAAY,kDAAG;AACf,SAAS;;AAET;AACA,mBAAmB,+CAA+C;AAClE,mBAAmB,KAAK;;AAExB;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,yBAAyB;AACpD;;AAEA;AACA,oBAAoB,yDAAU;;AAE9B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,2BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B;AAC7B,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,wDAAS;AACzC,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;;AAEtC,2BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAa;AACzB,YAAY,4DAAa;AACzB,SAAS;;AAET;AACA,qBAAqB,MAAM;AAC3B;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,6BAA6B,QAAQ;AACrC;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,qBAAqB,OAAO;AAC5B,qBAAqB,EAAE;AACvB,qBAAqB,EAAE;AACvB;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,6BAA6B,wDAAS;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI,6CAAE;AACN,IAAI,+CAAG;AACP,IAAI,+CAAG;AACP,IAAI,6DAAU;AACd,IAAI,2DAAS;AACb,IAAI,2DAAS;AACb,IAAI,mEAAa;AACjB;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACA;;AAEe,wEAAS,E;;;;;;;;;;;;ACprBxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,iEAAiE;;AAEjE;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC,2BAA2B;AACjE;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;AAEP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,KAAK;AAC5D;AA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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { GalleryComponent } from './gallery/gallery.component';\nimport { ImageComparerComponent } from './image-comparer/image-comparer.component';\n\nconst routes: Routes = [\n  { path: 'edit/:id', component: ImageComparerComponent },\n  { path: 'gallery', component: GalleryComponent },\n  { path: '', redirectTo: '/gallery', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'desize';\n}\n","<nav class=\"navbar navbar-dark bg-dark\">\n  <div class=\"container-fluid\">\n    <a class=\"navbar-brand\" [routerLink]=\"'/'\">Desize</a>\n  </div>\n</nav>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ImageComparerComponent } from './image-comparer/image-comparer.component';\nimport { PercentWithSignPipe } from './pipes/percent-with-sign.pipe';\nimport { BytesPipe } from './pipes/bytes.pipe';\nimport { GalleryComponent } from './gallery/gallery.component';\nimport { SafePipe } from './pipes/safe.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ImageComparerComponent,\n    PercentWithSignPipe,\n    BytesPipe,\n    GalleryComponent,\n    SafePipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport FileWithURL from '../models/FileWithURL';\nimport { ImageCompressionService } from '../services/image-compression.service';\nimport Selection from '../libs/selection';\n\nconst DOUBLECLICK_THRESHHOLD = 200;\n\n@Component({\n  selector: 'app-gallery',\n  templateUrl: './gallery.component.html',\n  styleUrls: ['./gallery.component.scss']\n})\nexport class GalleryComponent implements OnInit {\n  images = {};\n  selected = {};\n  clickTimer: {[imgId: number]: number}= {};\n  imageCounter = 0;\n  lastClick = 0;\n  quality = 100;\n  busy = false;\n\n  constructor(\n    public imgService: ImageCompressionService,\n    private route: Router,\n  ) {\n    console.log('gallery.component constructor');\n  }\n\n  clickTest() {\n    let now = new Date().valueOf();\n    console.log(`current time: ${now}, time between last and now: ${now-this.lastClick}`);\n    this.lastClick = now;\n  }\n\n  handleApplyQuality() {\n    if (this.busy)\n      return;\n\n    this.busy = true;\n    let imgsToApply = Object.keys(this.selected).filter(id => this.selected[id]);\n    imgsToApply.map(id => this.imgService.compressImg(Number(id), this.quality));\n    Promise.all(imgsToApply)\n      .then(() => {\n        this.busy = false;\n      });\n  }\n\n  handleImgFrameClick(imgId: number) {\n    console.log('handleImgFrameClick:', imgId);\n    let now = new Date().valueOf();\n    let last = this.clickTimer[imgId];\n    // is this a double click event? \n    if (last && now-last < DOUBLECLICK_THRESHHOLD) {\n      this.route.navigateByUrl('/edit/' + imgId);\n    }\n    this.clickTimer[imgId] = now;\n  }\n\n  handleFileSelect() {\n    const input = document.getElementById('fileselector') as HTMLInputElement;\n    if (input.files.length < 1)\n      return;\n\n    for (let i = 0; i < input.files.length; i++) {\n      this.imgService.addImg(input.files[i]);\n    }\n  }\n\n  ngOnInit(): void {\n    console.log('gallery.component OnInit');\n    let selection = Selection({\n      class: 'selection',\n      frame: document,\n      selectables: ['.img-frame'],\n      boundaries: ['.img-container']\n    }).on('start', ({inst, selected, oe}) => {\n      // Remove class if the user isn't pressing the control key or ⌘ key\n      if (!oe.ctrlKey && !oe.metaKey) {\n        // Unselect all elements\n        for (const el of selected) {\n          let imgId: number = +el.getAttribute('data-id');\n          this.selected[imgId] = false;\n        }\n\n        // Clear previous selection\n        inst.clearSelection();\n      }\n    }).on('move', ({changed: {removed, added}}) => {\n      // Add a custom class to the elements that where selected.\n      for (const el of added) {\n        let imgId: number = +el.getAttribute('data-id');\n        this.selected[imgId] = true;\n      }\n  \n      // Remove the class from elements that where removed\n      // since the last selection\n      for (const el of removed) {\n        let imgId: number = +el.getAttribute('data-id');\n        this.selected[imgId] = false;\n      }\n    }).on('stop', ({inst}) => {\n      // Remember selection in case the user wants to add smth in the next one\n      inst.keepSelection();\n    });\n  }\n}\n","<div class=\"gallery-container\" (click)=\"clickTest()\">\n  <input id=\"fileselector\" (input)=\"handleFileSelect()\" type=\"file\" multiple #fileselector>\n\n  <span>Quality: </span>\n  <input [(ngModel)]=\"quality\" type=\"number\" min=\"0\" max=\"100\" id=\"quality\">\n  <button type=\"button\" (click)=\"handleApplyQuality()\" class=\"btn btn-dark ml-3\">Apply</button>\n\n  <!-- FIXME: Vulnerable to XSS, if user selects a malicious file containing a script -->\n  <div class=\"img-container\">\n    <div\n      *ngFor=\"let item of imgService.getImgs() | keyvalue\"\n      class=\"img-frame\"\n      [attr.data-id]=\"item.key\"\n      [class.selected]=\"selected[item.key]\"\n      [style.background-image]=\"'url(' + item.value.original.url + ')'\"\n      (click)=\"handleImgFrameClick(item.key)\"\n    >\n      <div class=\"attribute-label\">\n        <span class=\"mr-3\"><b>Quality</b>: {{ item.value.quality/100 | percent }}</span>\n        <span><b>Output Size</b>: {{ item.value.compressed.f.size | bytes:'MB' }}</span>\n      </div>\n    </div>\n  </div>\n</div>\n","function getInnerWidth(e : HTMLElement) : number {\n  var styles = window.getComputedStyle(e);\n  var padding = parseFloat(styles.paddingLeft) +\n    parseFloat(styles.paddingRight);\n  return e.clientWidth - padding;\n}\n\nexport function drawImage(canvas : HTMLCanvasElement, url : string, resize=true) : Promise<void> {\n  return new Promise((resolve, reject) => {\n    let img = new Image();\n    img.src = url;\n\n    img.onload = function() {\n      if (resize) {\n        // set canvas to width for the parents element (not including padding/margin)\n        var dWidth = getInnerWidth(canvas.parentElement);\n        var dHeight = dWidth / img.width * img.height;\n        // image should not exceed a portion of the screen\n        if (dHeight > window.innerHeight * 0.8) {\n          dHeight = window.innerHeight * 0.8;\n          dWidth = dHeight / img.height * img.width;\n        }\n      } else {\n        var dWidth = img.width;\n        var dHeight = img.height;\n      }\n      \n      canvas.width = dWidth;\n      canvas.height = dHeight;\n      var ctx = canvas.getContext('2d');\n      ctx.drawImage(img,\n        0, 0,\n        img.width, img.height,\n        0, 0,\n        dWidth, dHeight\n      );\n\n      resolve();\n    }\n  });\n}\n\nexport function toJPEG(canvas : HTMLCanvasElement, quality : number) : Promise<Blob> {\n  return new Promise((resolve, reject) => {\n    if (quality < 0 || quality > 100)\n      reject(new Error(`jpeg quality should be between 0 to 100, got ${quality}`));\n\n    canvas.toBlob(resolve, 'image/jpeg', quality/100);\n  })\n}","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ImageCompressionService } from '../services/image-compression.service';\nimport { drawImage } from '../helpers/canvas';\n\ntype View = 'compare' | 'y' | 'vertical';\n@Component({\n  selector: 'image-comparer',\n  templateUrl: 'image-comparer.component.html',\n  styleUrls: ['./image-comparer.component.scss']\n})\nexport class ImageComparerComponent implements OnInit {\n  /* control fields */\n  quality = 85;\n  outputNameField = 'output';\n  viewMode : View = 'y';\n  imageInfo : any;\n  imgId: number;\n  /* HTML Elements */\n  compareXCanvas : HTMLCanvasElement;\n  compareYCanvas : HTMLCanvasElement;\n  YCanvas : HTMLCanvasElement;\n\n  constructor(\n    private route: ActivatedRoute,\n    private ref: ChangeDetectorRef,\n    public imgService: ImageCompressionService\n  ) { }\n\n  getOGFileSize() : number {\n    return this.imageInfo ? this.imageInfo.original.f.size : -1;\n  }\n\n  getCPFileSize() : number {\n    return this.imageInfo ? this.imageInfo.compressed.f.size : -1;\n  }\n\n  getFileDifference() : number {\n    return (this.imageInfo.compressed.f.size - this.imageInfo.original.f.size) / this.imageInfo.original.f.size;\n  }\n\n  getCurrentViewModel() : View {\n    return this.viewMode;\n  }\n\n  selectedImg() : boolean {\n    return this.imageInfo != undefined;\n  }\n\n  drawView() {\n    if (!this.imageInfo)\n      return;\n\n    switch (this.viewMode) {\n      case 'compare':\n        drawImage(this.compareXCanvas, this.imageInfo.original.url);\n        drawImage(this.compareYCanvas, this.imageInfo.compressed.url);\n      case 'y':\n        drawImage(this.YCanvas, this.imageInfo.compressed.url);\n      case 'vertical':\n    }\n  }\n\n  handleDownload() {\n    var a = document.createElement('a');\n    a.download = this.outputNameField + '.jpeg';\n    a.href = this.imageInfo.compressed.url;\n    a.click();\n    a.remove();\n  }\n\n  handleQualityChange() {\n    this.imgService.compressImg(this.imageInfo.imgId, this.quality)\n      .then((info) => {\n        this.imageInfo = info;\n        this.drawView();\n      })\n  }\n\n  handleViewChange(mode : View) {\n    if (mode === this.viewMode) {\n      return;\n    }\n    this.viewMode = mode;\n    this.drawView();\n  }\n\n  handleChangeImg(orderReversed=false) {\n    this.imgId = this.imgService.getNextImg(this.imgId, orderReversed);\n    this.imageInfo = this.imgService.getImg(this.imgId);\n    this.outputNameField = `${this.imageInfo.original.f.name.split('.')[0]}-compressed`;\n    this.quality = this.imageInfo.quality;\n    this.drawView();\n  }\n\n  imgFileSelectHandler() {\n    var fileInput = document.getElementById('file-selector') as HTMLFormElement;\n    var file : File = fileInput.files[0];\n    console.log(file);\n    if (file.type !== 'image/jpeg') {\n      alert(`${file.name} is not a JPEG file`);\n      return;\n    }\n    this.imageInfo = this.imgService.addImg(file);\n    this.outputNameField = `${file.name.split('.')[0]}-compressed`;\n    this.drawView();\n  }\n\n  ngOnInit() {\n    this.compareXCanvas = document.getElementById('before') as HTMLCanvasElement;\n    this.compareYCanvas = document.getElementById('after') as HTMLCanvasElement;\n    this.YCanvas = document.getElementById('y-canvas') as HTMLCanvasElement;\n\n    // resize images appropriately if view size changes\n    window.addEventListener('resize', this.drawView);\n    this.imgId = +this.route.snapshot.paramMap.get('id');\n    this.imageInfo = this.imgService.getImg(this.imgId);\n    this.outputNameField = `${this.imageInfo.original.f.name.split('.')[0]}-compressed`;\n    this.quality = this.imageInfo.quality;\n    this.drawView();\n  }\n}","\n<div class=\"edit-container\">\n  <!-- View Dropdown Select-->\n  <div class=\"view-selection dropdown\">\n    <button class=\"btn btn-lg dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-expanded=\"false\">\n      {{ \n        {\n          'compare': 'Compare View',\n          'y': 'Y View'\n        }[viewMode]\n      }}\n    </button>\n    <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n      <li><a class=\"dropdown-item\" (click)=\"handleViewChange('compare')\">Compare View</a></li>\n      <li><a class=\"dropdown-item\" (click)=\"handleViewChange('y')\">Y View</a></li>\n    </ul>\n  </div>\n\n  <div class=\"image-comparer-container\">\n    <!-- View Container Wrapper -->\n    <div class=\"container\">\n      <!-- Y View Components -->\n      <div class=\"container\" [hidden]=\"getCurrentViewModel() !== 'y'\">\n        <div class=\"row gx-3 justify-content-md-center\">\n          <div class=\"col-md\">\n            <div class=\"align-content-center\">\n              <canvas id=\"y-canvas\"></canvas>\n            </div>\n          </div>\n        </div>\n      </div> <!-- Y View Components -->\n\n      <!-- Compare View Components -->\n      <div class=\"container\" [hidden]=\"getCurrentViewModel() !== 'compare'\">\n        <div class=\"row gx-5 justify-content-md-center\">\n          <!-- INPUT -->\n          <div class=\"col-md-6 col-lg-6\">\n            <div class=\"align-content-center\">\n              <canvas id=\"before\"></canvas>\n            </div>\n          </div>\n          <!-- OUTPUT -->\n          <div class=\"col-md-6 col-lg-6\">\n            <div class=\"align-content-center\">\n              <canvas id=\"after\"></canvas>\n            </div>\n          </div>\n        </div>\n        <div class=\"vertical-split-line hidden-md\"></div>\n\n      </div> \n      <!-- Compare View Components -->\n    \n    </div> <!-- View Container Wrapper -->\n\n\n    <canvas id=\"input-canvas\" hidden></canvas>\n  </div>\n\n  <div (click)=\"handleChangeImg(true)\" [hidden]=\"imgService.isFirstImg(imgId)\" class=\"pos-fixed left center next-btn ml-2\">\n    <i class=\"fas fa-arrow-alt-circle-left\"></i>\n  </div>\n\n  <div (click)=\"handleChangeImg()\" [hidden]=\"imgService.isLastImg(imgId)\" class=\"pos-fixed right center next-btn mr-2\">\n    <i class=\"fas fa-arrow-alt-circle-right\"></i>\n  </div>\n</div>\n\n<!-- CONTROL BAR -->\n<div class=\"control-bar\">\n  <!-- FILE SIZE DISPLAY -->\n  <div class=\"control-bar-row align-content-center\">\n    <span\n      class=\"pop-up\"\n      [class.red]=\"getFileDifference() > 0\"\n      [class.green]=\"getFileDifference() < 0\"\n    >\n      {{ getCPFileSize() | bytes:'KB' }} / {{ getOGFileSize() | bytes:'KB' }} ({{ getFileDifference() | percentWithSign }})\n    </span>\n  </div>\n  <!-- JPEG QUALITY CONTROL -->\n  <div class=\"control-bar-row quality-selector input-group\">\n    <input [(ngModel)]=\"quality\" (change)=\"handleQualityChange()\" type=\"range\" class=\"form-range\" min=\"0\" max=\"100\" id=\"quality\">\n    <input [(ngModel)]=\"quality\" (change)=\"handleQualityChange()\" type=\"number\" class=\"form-control\" min=\"0\" max=\"100\" id=\"quality\">\n    <span class=\"input-group-text\">%</span>\n  </div>\n</div>\n\n\n<div class=\"pos-fixed right bottom\">\n  <div class=\"download-control\" (click)=\"handleDownload()\">\n    <i class=\"fas fa-download\"></i>\n  </div>\n</div>","import {css, eventPath, intersects, off, on, removeElement, selectAll, simplifyEvent} from './utils';\n\n// Some var shorting for better compression and readability\nconst {abs, max, min, round, ceil} = Math;\nconst preventDefault = e => e.preventDefault();\n\n// Edge < 79 uses the unofficial name ClienRect\nconst DOMRect = typeof window.DOMRect === 'undefined' ? window.ClientRect : window.DOMRect;\n\n/* eslint-disable new-cap */\nfunction Selection(options = {}) {\n\n    const that = {\n\n        options: Object.assign({\n            class: 'selection-area',\n            frame: document,\n            mode: 'touch',\n            tapMode: 'native',\n            startThreshold: 10,\n            singleClick: true,\n            disableTouch: false,\n\n            selectables: [],\n            scrollSpeedDivider: 10,\n            manualScrollSpeed: 750,\n\n            startareas: ['html'],\n            boundaries: ['html'],\n            selectionAreaContainer: 'body'\n        }, options),\n\n        // Store for keepSelection\n        _stored: [],\n        _selectables: [],\n        _selected: [], // Currently touched elements\n        _changed: {\n            added: [], // Added elements since last selection\n            removed: [] // Removed elements since last selection\n        },\n\n        // Evenlistener name: [callbacks]\n        _eventListener: {\n            beforestart: [],\n            start: [],\n            move: [],\n            stop: []\n        },\n\n        // Create area element\n        _area: null,\n        _areaDomRect: null, // Caches the position of the selection-area\n        _clippingElement: null,\n\n        // Is getting set on movement. Varied.\n        _scrollAvailable: true,\n        _scrollSpeed: {x: null, y: null},\n\n        _init() {\n            const {frame} = that.options;\n            that._area = frame.createElement('div');\n            that._clippingElement = frame.createElement('div');\n            that._clippingElement.appendChild(that._area);\n\n            // Add class to the area element\n            that._area.classList.add(that.options.class);\n\n            // Apply basic styles to the area element\n            css(that._area, {\n                willChange: 'top, left, bottom, right, width, height',\n                top: 0,\n                left: 0,\n                position: 'fixed'\n            });\n\n            css(that._clippingElement, {\n                overflow: 'hidden',\n                position: 'fixed',\n                transform: 'translate3d(0, 0, 0)', // https://stackoverflow.com/a/38268846\n                pointerEvents: 'none',\n                zIndex: '1'\n            });\n\n            that.enable();\n        },\n\n        _bindStartEvents(type) {\n            const {frame} = that.options;\n            const fn = type === 'on' ? on : off;\n            fn(frame, 'mousedown', that._onTapStart);\n\n            if (!that.options.disableTouch) {\n                fn(frame, 'touchstart', that._onTapStart, {\n                    passive: false\n                });\n            }\n        },\n\n        _onTapStart(evt, silent = false) {\n            const {x, y, target} = simplifyEvent(evt);\n            const {startareas, boundaries, frame} = that.options;\n            const targetBoundingClientRect = target.getBoundingClientRect();\n\n            // Find start-areas and boundaries\n            const startAreas = selectAll(startareas, frame);\n            that._boundaries = selectAll(boundaries, frame);\n\n            // Check in which container the user currently acts\n            that._targetContainer = that._boundaries.find(el =>\n                intersects(el.getBoundingClientRect(), targetBoundingClientRect)\n            );\n\n            // Check if area starts in one of the start areas / boundaries\n            const evtpath = eventPath(evt);\n            if (!that._targetContainer ||\n                !startAreas.find(el => evtpath.includes(el)) ||\n                !that._boundaries.find(el => evtpath.includes(el))) {\n                return;\n            }\n\n            if (!silent && that._emit('beforestart', evt) === false) {\n                return;\n            }\n\n            // Area start point\n            that._ax1 = x;\n            that._ay1 = y;\n\n            // Area end point\n            that._ax2 = 0;\n            that._ay2 = 0;\n\n            // To detect single-click\n            that._singleClick = true;\n            that.clearSelection(false);\n\n            // Prevent default select event\n            on(frame, 'selectstart', preventDefault);\n\n            // Add listener\n            on(frame, ['touchmove', 'mousemove'], that._delayedTapMove, {passive: false});\n            on(frame, ['mouseup', 'touchcancel', 'touchend'], that._onTapStop);\n\n            // Firefox will scroll down the page which would break the selection.\n            evt.preventDefault();\n        },\n\n        _onSingleTap(evt) {\n            const {tapMode} = that.options;\n            const spl = simplifyEvent(evt);\n            let target = null;\n\n            if (tapMode === 'native') {\n                target = spl.target;\n            } else if (tapMode === 'touch') {\n                that.resolveSelectables();\n\n                const {x, y} = spl;\n                target = that._selectables.find(v => {\n                    const {right, left, top, bottom} = v.getBoundingClientRect();\n                    return x < right && x > left && y < bottom && y > top;\n                });\n            } else {\n                throw new Error(`Unknown tapMode option: ${tapMode}`);\n            }\n\n            if (!target) {\n                return false;\n            }\n\n            /**\n             * Resolve selectables again.\n             * If the user starded in a scrollable area they will be reduced\n             * to the current area. Prevent the exclusion of these if a range-selection\n             * gets performed.\n             */\n            that.resolveSelectables();\n\n            // Traverse dom upwards to check if target is selectable\n            while (!that._selectables.includes(target)) {\n                if (!target.parentElement) {\n                    return;\n                }\n\n                target = target.parentElement;\n            }\n\n            that._emit('start', evt);\n            const stored = that._stored;\n            if (evt.shiftKey && stored.length) {\n                const reference = stored[stored.length - 1];\n\n                // Resolve correct range\n                const [preceding, following] = reference.compareDocumentPosition(target) & 4 ? [target, reference] : [reference, target];\n\n                const rangeItems = [...that._selectables.filter(el =>\n                    (el.compareDocumentPosition(preceding) & 4) &&\n                    (el.compareDocumentPosition(following) & 2)\n                ), target];\n\n                that.select(rangeItems);\n                that._emit('move', evt);\n                that._emit('stop', evt);\n            } else {\n\n                if (that._stored.includes(target)) {\n                    that.removeFromSelection(target);\n                } else {\n                    that.select(target);\n                }\n\n                that._emit('move', evt);\n                that._emit('stop', evt);\n            }\n        },\n\n        _delayedTapMove(evt) {\n            const {x, y} = simplifyEvent(evt);\n            const {startThreshold, frame} = that.options;\n            const {_ax1, _ay1} = that; // Coordinates of first \"tap\"\n\n            // Check pixel threshold\n            const thresholdType = typeof startThreshold;\n            if ((thresholdType === 'number' && abs((x + y) - (_ax1 + _ay1)) >= startThreshold) ||\n                (thresholdType === 'object' && abs(x - _ax1) >= startThreshold.x || abs(y - _ay1) >= startThreshold.y)) {\n                off(frame, ['mousemove', 'touchmove'], that._delayedTapMove, {passive: false});\n                on(frame, ['mousemove', 'touchmove'], that._onTapMove, {passive: false});\n\n                // Make area element visible\n                css(that._area, 'display', 'block');\n\n                // Apppend selection-area to the dom\n                selectAll(that.options.selectionAreaContainer, frame)[0].appendChild(that._clippingElement);\n\n                // Now after the threshold is reached resolve all selectables\n                that.resolveSelectables();\n\n                // An action is recognized as single-select until the user performed a mutli-selection\n                that._singleClick = false;\n\n                // Just saving the boundaries of this container for later\n                const tb = that._targetBoundary = that._targetContainer.getBoundingClientRect();\n\n                // Find container and check if it's scrollable\n                if (round(that._targetContainer.scrollHeight) !== round(tb.height) ||\n                    round(that._targetContainer.scrollWidth) !== round(tb.width)) {\n\n                    // Indenticates if the user is currently in a scrollable area\n                    that._scrollAvailable = true;\n\n                    // Detect mouse scrolling\n                    on(window, 'wheel', that._manualScroll, {passive: false});\n\n                    /**\n                     * The selection-area will also cover other element which are\n                     * out of the current scrollable parent. So find all elements\n                     * which are in the current scrollable element. Later these are\n                     * the only selectables instead of all.\n                     */\n                    that._selectables = that._selectables.filter(s => that._targetContainer.contains(s));\n\n                    /**\n                     * To clip the area, the selection area has a parent\n                     * which has exact the same dimensions as the scrollable elemeent.\n                     * Now if the area exeeds these boundaries it will be cropped.\n                     */\n                    css(that._clippingElement, {\n                        top: tb.top,\n                        left: tb.left,\n                        width: tb.width,\n                        height: tb.height\n                    });\n\n                    /**\n                     * The area element is relative to the clipping element,\n                     * but when this is moved or transformed we need to correct\n                     * the positions via a negative margin.\n                     */\n                    css(that._area, {\n                        marginTop: -tb.top,\n                        marginLeft: -tb.left\n                    });\n                } else {\n                    that._scrollAvailable = false;\n\n                    /**\n                     * Reset margin and clipping element dimensions.\n                     */\n                    css(that._clippingElement, {\n                        top: 0,\n                        left: 0,\n                        width: '100%',\n                        height: '100%'\n                    });\n\n                    css(that._area, {\n                        marginTop: 0,\n                        marginLeft: 0\n                    });\n                }\n\n                // Trigger recalc and fire event\n                that._onTapMove(evt);\n                that._emit('start', evt);\n            }\n\n            evt.preventDefault(); // Prevent swipe-down refresh\n        },\n\n        _onTapMove(evt) {\n            const {x, y} = simplifyEvent(evt);\n            const {scrollSpeedDivider} = that.options;\n            const scon = that._targetContainer;\n            let ss = that._scrollSpeed;\n            that._ax2 = x;\n            that._ay2 = y;\n\n            if (that._scrollAvailable && (ss.y !== null || ss.x !== null)) {\n\n                // Continous scrolling\n                requestAnimationFrame(function scroll() {\n\n                    // Make sure that ss is not outdated\n                    ss = that._scrollSpeed;\n                    const scrollY = ss.y !== null;\n                    const scrollX = ss.x !== null;\n\n                    // Scrolling is not anymore required\n                    if (!scrollY && !scrollX) {\n                        return;\n                    }\n\n                    /**\n                     * If the value exeeds the scrollable area it will\n                     * be set to the max / min value. So change only\n                     */\n                    const {scrollTop, scrollLeft} = scon;\n\n                    // Reduce velocity, use ceil in both directions to scroll at least 1px per frame\n                    if (scrollY) {\n                        scon.scrollTop += ceil(ss.y / scrollSpeedDivider);\n                        that._ay1 -= scon.scrollTop - scrollTop;\n                    }\n\n                    if (scrollX) {\n                        scon.scrollLeft += ceil(ss.x / scrollSpeedDivider);\n                        that._ax1 -= scon.scrollLeft - scrollLeft;\n                    }\n\n                    /**\n                     * We changed the start coordinates -> redraw the selectiona area\n                     * We changed the dimensions of the area element -> re-calc selected elements\n                     * The selected elements array has been changed -> fire event\n                     */\n                    that._recalcAreaRect();\n                    that._updatedTouchingElements();\n                    that._emit('move', evt);\n                    that._redrawArea();\n\n                    // Keep scrolling even if the user stops to move his pointer\n                    requestAnimationFrame(scroll);\n                });\n            } else {\n\n                /**\n                 * Perform redraw only if scrolling is not active.\n                 * If scrolling is active this area is getting re-dragwed by the\n                 * anonymized scroll function.\n                 */\n                that._recalcAreaRect();\n                that._updatedTouchingElements();\n                that._emit('move', evt);\n                that._redrawArea();\n            }\n\n            evt.preventDefault(); // Prevent swipe-down refresh\n        },\n\n        _manualScroll(evt) {\n            const {manualScrollSpeed} = that.options;\n\n            // Consistent scrolling speed on all browsers\n            const deltaY = evt.deltaY ? (evt.deltaY > 0 ? 1 : -1) : 0;\n            const deltaX = evt.deltaX ? (evt.deltaX > 0 ? 1 : -1) : 0;\n            that._scrollSpeed.y += deltaY * manualScrollSpeed;\n            that._scrollSpeed.x += deltaX * manualScrollSpeed;\n            that._onTapMove(evt);\n\n            // Prevent defaul scrolling behaviour, eg. page scrolling\n            evt.preventDefault();\n        },\n\n        _recalcAreaRect() {\n            const {scrollTop, scrollHeight, clientHeight, scrollLeft, scrollWidth, clientWidth} = that._targetContainer;\n            const brect = that._targetBoundary;\n            const ss = that._scrollSpeed;\n            let x = that._ax2;\n            let y = that._ay2;\n\n            if (x < brect.left) {\n                ss.x = scrollLeft ? -abs(brect.left - x) : null;\n                x = brect.left;\n            } else if (x > brect.left + brect.width) {\n                ss.x = scrollWidth - scrollLeft - clientWidth ? abs(brect.left + brect.width - x) : null;\n                x = brect.left + brect.width;\n            } else {\n                ss.x = null;\n            }\n\n            if (y < brect.top) {\n                ss.y = scrollTop ? -abs(brect.top - y) : null;\n                y = brect.top;\n            } else if (y > brect.top + brect.height) {\n                ss.y = scrollHeight - scrollTop - clientHeight ? abs(brect.top + brect.height - y) : null;\n                y = brect.top + brect.height;\n            } else {\n                ss.y = null;\n            }\n\n            const x3 = min(that._ax1, x);\n            const y3 = min(that._ay1, y);\n            const x4 = max(that._ax1, x);\n            const y4 = max(that._ay1, y);\n            that._areaDomRect = new DOMRect(x3, y3, x4 - x3, y4 - y3);\n        },\n\n        _redrawArea() {\n            const {x, y, width, height} = that._areaDomRect;\n            const areaStyle = that._area.style;\n\n            // It's generally faster to not use es6-templates\n            // It's also faster to manually change the properties instead of calling Object.assign\n            /* eslint prefer-template: \"off\" */\n            areaStyle.transform = 'translate3d(' + x + 'px,' + y + 'px, 0)';\n            areaStyle.width = width + 'px';\n            areaStyle.height = height + 'px';\n        },\n\n        _onTapStop(evt, noevent) {\n            const {frame, singleClick} = that.options;\n\n            // Remove event handlers\n            off(frame, ['mousemove', 'touchmove'], that._delayedTapMove);\n            off(frame, ['touchmove', 'mousemove'], that._onTapMove);\n            off(frame, ['mouseup', 'touchcancel', 'touchend'], that._onTapStop);\n\n            if (evt && that._singleClick && singleClick) {\n                that._onSingleTap(evt);\n            } else if (!that._singleClick && !noevent) {\n                that._updatedTouchingElements();\n                that._emit('stop', evt);\n            }\n\n            // Reset scroll speed\n            that._scrollSpeed = {x: null, y: null};\n\n            // Unbind mouse scrolling listener\n            off(window, 'wheel', that._manualScroll);\n\n            // Remove selection-area from dom\n            that._clippingElement.remove();\n\n            // Enable default select event\n            off(frame, 'selectstart', preventDefault);\n            css(that._area, 'display', 'none');\n        },\n\n        _updatedTouchingElements() {\n            const {_selected, _selectables, options, _areaDomRect} = that;\n            const {mode} = options;\n\n            // Update\n            const touched = [];\n            const added = [];\n            const removed = [];\n\n            // Itreate over the selectable elements\n            for (let i = 0; i < _selectables.length; i++) {\n                const node = _selectables[i];\n\n                // Check if area intersects element\n                if (intersects(_areaDomRect, node.getBoundingClientRect(), mode)) {\n\n                    // Check if the element wasn't present in the last selection.\n                    if (!_selected.includes(node)) {\n                        added.push(node);\n                    }\n\n                    touched.push(node);\n                }\n            }\n\n            // Check which elements where removed since last selection\n            for (let i = 0; i < _selected.length; i++) {\n                const el = _selected[i];\n                if (!touched.includes(el)) {\n                    removed.push(el);\n                }\n            }\n\n            // Save\n            that._selected = touched;\n            that._changed = {added, removed};\n        },\n\n        _emit(event, evt) {\n            let ok = true;\n\n            for (const listener of that._eventListener[event]) {\n                ok = listener.call(that, {\n                    inst: that,\n                    area: that._area,\n                    selected: that._selected.concat(that._stored),\n                    changed: that._changed,\n                    oe: evt\n                }) && ok;\n            }\n\n            return ok;\n        },\n\n        /**\n         * Manually triggers the start of a selection\n         * @param evt A MouseEvent / TouchEvent -like object\n         * @param silent If beforestart should be fired,\n         */\n        trigger(evt, silent = true) {\n            that._onTapStart(evt, silent);\n        },\n\n        /**\n         * Adds an eventlistener\n         * @param event\n         * @param cb\n         */\n        on(event, cb) {\n            that._eventListener[event].push(cb);\n            return that;\n        },\n\n        /**\n         * Removes an event listener\n         * @param event\n         * @param cb\n         */\n        off(event, cb) {\n            const callBacks = that._eventListener[event];\n\n            if (callBacks) {\n                const index = callBacks.indexOf(cb);\n\n                if (~index) {\n                    callBacks.splice(index, 1);\n                }\n            }\n\n            return that;\n        },\n\n        /**\n         * Can be used if during a selection elements have been added.\n         * Will update everything which can be selected.\n         */\n        resolveSelectables() {\n\n            // Resolve selectors\n            that._selectables = selectAll(that.options.selectables, that.options.frame);\n        },\n\n        /**\n         * Saves the current selection for the next selecion.\n         * Allows multiple selections.\n         */\n        keepSelection() {\n            const {_selected, _stored} = that;\n\n            for (let i = 0; i < _selected.length; i++) {\n                const el = _selected[i];\n                if (!_stored.includes(el)) {\n                    _stored.push(el);\n                }\n            }\n        },\n\n        /**\n         * Clear the elements which where saved by 'keepSelection()'.\n         * @param store If the store should also get cleared\n         */\n        clearSelection(store = true) {\n            store && (that._stored = []);\n            that._selected = [];\n            that._changed.added = [];\n            that._changed.removed = [];\n        },\n\n        /**\n         * Removes an particular element from the selection.\n         */\n        removeFromSelection(el) {\n            that._changed.removed.push(el);\n            removeElement(that._stored, el);\n            removeElement(that._selected, el);\n        },\n\n        /**\n         * @returns {Array} Selected elements\n         */\n        getSelection() {\n            return that._stored;\n        },\n\n        /**\n         * Cancel the current selection process.\n         * @param keepEvent {boolean} true to fire the onStop listener after cancel.\n         */\n        cancel(keepEvent = false) {\n            that._onTapStop(null, !keepEvent);\n        },\n\n        /**\n         * Set or get an option.\n         * @param   {string} name\n         * @param   {*}      value\n         * @return  {*}      the new value\n         */\n        option(name, value) {\n            const {options} = that;\n            return value === undefined ? options[name] : (options[name] = value);\n        },\n\n        /**\n         * Disable the selection functinality.\n         */\n        disable() {\n            that._bindStartEvents('off');\n        },\n\n        /**\n         * Unbinds all events and removes the area-element\n         */\n        destroy() {\n            that.disable();\n            that._clippingElement.remove();\n        },\n\n        /**\n         * Disable the selection functinality.\n         */\n        enable() {\n            that._bindStartEvents('on');\n        },\n\n        /**\n         * Manually select elements\n         * @param query - CSS Query, can be an array of queries\n         */\n        select(query) {\n            const {_selected, _stored, options} = that;\n            const elements = selectAll(query, options.frame).filter(el =>\n                !_selected.includes(el) &&\n                !_stored.includes(el)\n            );\n\n            that._selected.push(...elements);\n            that._changed.added.push(...elements);\n            return elements;\n        }\n    };\n\n    // Initialize\n    that._init();\n\n    return that;\n}\n\n// Export utils\nSelection.utils = {\n    on,\n    off,\n    css,\n    intersects,\n    selectAll,\n    eventPath,\n    removeElement\n};\n\n/**\n * Create selection instance\n * @param {Object} [options]\n */\nSelection.create = options => Selection(options);\n\nexport default Selection;","/* eslint-disable prefer-rest-params */\nfunction eventListener(method, elements, events, fn, options = {}) {\n\n  // Normalize array\n  if (elements instanceof HTMLCollection || elements instanceof NodeList) {\n      elements = Array.from(elements);\n  } else if (!Array.isArray(elements)) {\n      elements = [elements];\n  }\n\n  if (!Array.isArray(events)) {\n      events = [events];\n  }\n\n  for (const element of elements) {\n      for (const event of events) {\n          element[method](event, fn, {capture: false, ...options});\n      }\n  }\n\n  return Array.prototype.slice.call(arguments, 1);\n}\n\n/**\n* Add event(s) to element(s).\n* @param elements DOM-Elements\n* @param events Event names\n* @param fn Callback\n* @param options Optional options\n* @return Array passed arguments\n*/\nexport const on = eventListener.bind(null, 'addEventListener');\n\n/**\n* Remove event(s) from element(s).\n* @param elements DOM-Elements\n* @param events Event names\n* @param fn Callback\n* @param options Optional options\n* @return Array passed arguments\n*/\nexport const off = eventListener.bind(null, 'removeEventListener');\n\nconst unitify = (val, unit = 'px') => typeof val === 'number' ? val + unit : val;\n\n/**\n* Add css to a DOM-Element or returns the current\n* value of a property.\n*\n* @param el The Element.\n* @param attr The attribute or a object which holds css key-properties.\n* @param val The value for a single attribute.\n* @returns {*}\n*/\nexport function css(el, attr, val) {\n  const style = el && el.style;\n  if (style) {\n      if (typeof attr === 'object') {\n\n          for (const [key, value] of Object.entries(attr)) {\n              style[key] = unitify(value);\n          }\n\n      } else if (val && typeof attr === 'string') {\n          style[attr] = unitify(val);\n      }\n  }\n}\n\n/**\n* Check if two DOM-Elements intersects each other.\n* @param a BoundingClientRect of the first element.\n* @param b BoundingClientRect of the second element.\n* @param mode Options are center, cover or touch.\n* @returns {boolean} If both elements intersects each other.\n*/\nexport function intersects(a, b, mode) {\n  switch (mode || 'touch') {\n      case 'center': {\n          const bxc = b.left + b.width / 2;\n          const byc = b.top + b.height / 2;\n\n          return bxc >= a.left &&\n              bxc <= a.right &&\n              byc >= a.top &&\n              byc <= a.bottom;\n      }\n      case 'cover': {\n          return b.left >= a.left &&\n              b.top >= a.top &&\n              b.right <= a.right &&\n              b.bottom <= a.bottom;\n      }\n      case 'touch': {\n          return a.right >= b.left &&\n              a.left <= b.right &&\n              a.bottom >= b.top &&\n              a.top <= b.bottom;\n      }\n      default: {\n          throw new Error(`Unkown intersection mode: ${mode}`);\n      }\n  }\n}\n\n/**\n* Takes a selector (or array of selectors) and returns the matched nodes.\n* @param selector The selector or an Array of selectors.\n* @returns {Array} Array of DOM-Nodes.\n*/\nexport function selectAll(selector, doc = document) {\n  if (!Array.isArray(selector)) {\n      selector = [selector];\n  }\n\n  const nodes = [];\n  for (let i = 0, l = selector.length; i < l; i++) {\n      const item = selector[i];\n\n      if (typeof item === 'string') {\n          nodes.push(...doc.querySelectorAll(item));\n      } else if (item instanceof doc.defaultView.HTMLElement) {\n          nodes.push(item);\n      }\n  }\n\n  return nodes;\n}\n\n/**\n* Polyfill for safari & firefox for the eventPath event property.\n* @param evt The event object.\n* @return [String] event path.\n*/\nexport function eventPath(evt) {\n  let path = evt.path || (evt.composedPath && evt.composedPath());\n\n  if (path && path.length > 0) {\n      return path;\n  }\n\n  let el = evt.target;\n  for (path = [el]; (el = el.parentElement);) {\n      path.push(el);\n  }\n\n  path.push(document, window);\n  return path;\n}\n\n/**\n* Removes an element from an Array.\n*/\nexport function removeElement(arr, el) {\n  const index = arr.indexOf(el);\n\n  if (~index) {\n      arr.splice(index, 1);\n  }\n}\n\nexport function simplifyEvent(evt) {\n  const tap = (evt.touches && evt.touches[0] || evt);\n  return {\n      tap,\n      x: tap.clientX,\n      y: tap.clientY,\n      target: tap.target\n  };\n}","export default class FileWithURL {\n  #f: File | Blob;\n  #url: string;\n\n  constructor(f: File) {\n    this.#f = f;\n    this.#url = URL.createObjectURL(f);\n  }\n\n  get url() {\n    return this.#url;\n  }\n\n  get f() {\n    return this.#f;\n  }\n\n  release() {\n    URL.revokeObjectURL(this.#url);\n  }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\ntype FileSizeUnit = 'B' | 'KB' | 'MB' | 'GB';\nvar denom = {\n  'B': 1,\n  'KB': 1_000,\n  'MB': 1_000_000,\n  'GB': 1_000_000_000\n};\n\n@Pipe({\n  name: 'bytes'\n})\nexport class BytesPipe implements PipeTransform {\n  transform(value: number, unit: FileSizeUnit): unknown {\n    return `${value / denom[unit]} ${unit}`;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { PercentPipe } from '@angular/common';\n\n@Pipe({\n  name: 'percentWithSign'\n})\nexport class PercentWithSignPipe implements PipeTransform {\n  transform(value: number): unknown {\n    let pipe = new PercentPipe('en-US');\n    return (value >= 0 ? '+' : '') + pipe.transform(value);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n  constructor(private sanitizer: DomSanitizer) { }\n\n  transform(url) {\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n\n}","import { Injectable } from '@angular/core';\nimport FileWithURL from '../models/FileWithURL';\nimport { drawImage, toJPEG } from '../helpers/canvas';\n\ninterface ImgInfo {\n  imgId: number;\n  original: FileWithURL;\n  compressed: FileWithURL;\n  quality: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageCompressionService {\n  images: { [key: number]: ImgInfo; } = {};\n  idCounter = 0;\n  firstImg = 1;\n  lastImg = 1;\n\n  constructor() { }\n\n  addImg(img: File): ImgInfo {\n    this.idCounter++;\n    this.lastImg = this.idCounter;\n    return this.images[this.idCounter] = {\n      'imgId': this.idCounter,\n      'original': new FileWithURL(img),\n      'compressed': new FileWithURL(img),\n      'quality': 100\n    }\n  }\n\n  getImgs(): { [key: number]: ImgInfo; } {\n    return this.images;\n  }\n\n  getImg(id: number): ImgInfo {\n    return this.images[id];\n  }\n\n  // get the next in order of ascending img id\n  // will wrap around to the first img once the end is reached \n  getNextImg(id: number, reverse=false): number {\n    let incre = reverse ? -1 : 1;\n    // step forward from the given id, until a image is found\n    let i = id;\n    do {\n      i = (i+incre) % (this.idCounter+1);\n      if (i == 0)\n        i = this.idCounter;\n      if (this.images.hasOwnProperty(i))\n        return i;\n    } while (i != id);\n\n    return id;\n  }\n\n  isFirstImg(id: number) : boolean {\n    return this.firstImg == id;\n  }\n\n  isLastImg(id: number) : boolean {\n    return this.lastImg == id;\n  }\n\n  compressImg(imgId: number, quality: number) : Promise<ImgInfo> {\n    let img = this.images[imgId];\n    let canvas = document.createElement('canvas') as HTMLCanvasElement;\n    return drawImage(canvas, img.original.url, false)\n      .then(() => {\n        return toJPEG(canvas, quality);\n      })\n      .then((b : Blob) => {\n        img.compressed.release();\n        img.compressed = new FileWithURL(b as File);\n        img.quality = quality;\n        return img;\n      })\n      .catch(e => {\n        throw e;\n      });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}